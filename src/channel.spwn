// Control
get = (self, channel_id: @string) {
    return $.http_request(
        "get",
        "https://discord.com/api/v9/channels/{}".fmt(channel_id),
        self.headers(),
        "",
    )
}

modify = (self, content: @string, channel_id: @string) {
    return $.http_request(
        "patch",
        "https://discord.com/api/v9/channels/{}".fmt(channel_id),
        self.headers(),
        content,
    )
}

delete = (self, channel_id: @string, auth) {
    return $.http_request(
        "delete",
        "https://discord.com/api/v9/channels/{}".fmt(channel_id),
        self.headers(),
        "",
    )
}

// Chat
message = (self, content: @string, channel_id: @string) {
    return $.http_request(
        "post",
        "https://discord.com/api/v9/channels/{}/messages".fmt(channel_id),
        self.headers(),
        content,
    )
}

crosspost = (self, channel_id: @string, message_id: @string) {
    return $.http_request(
        "post",
        "https://discord.com/api/v9/{}/messages/{}/crosspost".fmt([channel_id, message_id]),
        self.headers(),
        "",
    )
}

edit = (self, content: @string, channel_id: @string, message_id: @string) {
    return $.http_request(
        "patch",
        "https://discord.com/api/v9/channels/{}/messages/{}".fmt([channel_id, message_id]),
        self.headers(),
        content,
    )
}

delete_message = (self, channel_id: @string, message_id: @string) {
    return $.http_request(
        "delete",
        "https://discord.com/api/v9/channels/{}/messages/{}".fmt([channel_id, message_id]),
        self.headers(),
        "",
    )
}

pin = (self, channel_id: @string, message_id: @string) {
    return $.http_request(
        "put",
        "https://discord.com/api/v9/channels/{}/pins/{}".fmt([channel_id, message_id]),
        self.headers(),
        "",
    )
}

unpin = (self, channel_id: @string, message_id: @string) {
    return $.http_request(
        "delete",
        "https://discord.com/api/v9/channels/{}/pins/{}".fmt([channel_id, message_id]),
        self.headers(),
        "",
    )
}

pinned = (self, channel_id: @string) {
    return $.http_request(
        "get",
        "https://discord.com/api/v9/channels/{}/pins".fmt(channel_id),
        self.headers(),
        "",
    )
}

get_message = (self, channel_id: @string, message_id: @string) {
    return $.http_request(
        "get",
        "https://discord.com/api/v9/channels/{}/messages/{}".fmt([channel_id, message_id]),
        self.headers(),
        "",
    )
}

get_messages = (self, channel_id: @string) {
    return $.http_request(
        "get",
        "https://discord.com/api/v9/channels/{}/messages".fmt(channel_id),
        self.headers(),
        "",
    )
}

react = (self, channel_id: @string, message_id: @string, emote: @string) {
    return $.http_request(
        "put",
        "https://discord.com/api/v9/channels/{}/messages/{}/reactions/{}/@me".fmt([channel_id, message_id, emote]),
        self.headers(),
        "",
    )
}

unreact = (self, channel_id: @string, message_id: @string, emote: @string, user_id: @string = "@me") {
    return $.http_request(
        "delete",
        "https://discord.com/api/v9/channels/{}/messages/{}/reactions/{}/{}".fmt([channel_id, message_id, emote, user_id]),
        self.headers(),
        "",
    )
}

get_reactions = (self, channel_id: @string, message_id: @string, emote: @string) {
    return $.http_request(
        "get",
        "https://discord.com/api/v9/channels/{}/messages/{}/reactions/{}".fmt([channel_id, message_id, emote]),
        self.headers(),
        "",
    )
}

delete_all_reactions = (self, channel_id: @string, message_id: @string, emote: @string = "") {
    return $.http_request(
        "delete",
        "https://discord.com/api/v9/channels/{}/messages/{}/reactions".fmt([channel_id, message_id]) if
            emote.is_empty() else
        "https://discord.com/api/v9/channels/{}/messages/{}/reactions/{}".fmt([channel_id, message_id, emote]),
        self.headers(),
        "",
    )
}

return {
    get,
    modify,
    delete,
    message,
    crosspost,
    edit,
    delete_message,
    pin,
    unpin,
    pinned,
    get_message,
    get_messages,
    react,
    unreact,
    get_reactions,
    delete_all_reactions,
}
