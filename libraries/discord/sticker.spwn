get = (sticker_id: @string, sticker_type: @string = "nitro", guild_id: @string, auth: @string = $.readfile("../../auth.dat")) {
    headers = {
        "Authorization": auth
    }
    if sticker_type == "nitro" {
        return $.http_request("get", "https://discord.com/api/v9/stickers/{}".fmt(sticker_id), headers, "")
    } else if sticker_type == "guild" {
        return $.http_request("get", "https://discord.com/api/v9/guilds/{}/stickers/{}".fmt([guild_id, sticker_id]), headers, "")
    }
}

packs = () {
    return $.http_request("get", "https://discord.com/api/v9/sticker-packs", {}, "")
}

list = (guild_id: @string, auth: @string = $.readfile("../../auth.dat")) {
    headers = {
        "Authorization": auth
    }
    return $.http_request("get", "https://discord.com/api/v9/guilds/{}/stickers".fmt(guild_id), headers, "")
}

create = (content: @string, guild_id: @string, auth: @string = $.readfile("../../auth.dat")) {
    headers = {
        "Authorization": auth,
        "Content-Type": "multipart/form-data"
    }
    return $.http_request("post", "https://discord.com/api/v9/guilds/{}/stickers".fmt(guild_id), headers, content)
}

modify = (content: @string, guild_id: @string, sticker_id: @string, auth: @string = $.readfile("../../auth.dat")) {
    headers = {
        "Authorization": auth,
        "Content-Type": "multipart/form-data"
    }
    return $.http_request("patch", "https://discord.com/api/v9/guilds/{}/stickers/{}".fmt([guild_id, sticker_id]), headers, content)
}

delete = (content: @string, guild_id: @string, sticker_id: @string, auth: @string = $.readfile("../../auth.dat")) {
    headers = {
        "Authorization": auth,
    }
    return $.http_request("delete", "https://discord.com/api/v9/guilds/{}/stickers/{}".fmt([guild_id, sticker_id]), headers, content)
}

return {
    get,
    packs,
    list,
    create,
    modify,
    delete
}